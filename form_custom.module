<?php
/**
 * @file
 * A page with a custom form, the submissions of which are stored via MySQL
 * and may be viewed by administrators.
 */

/**
 * Implementation of hook_menu.
 */
function form_custom_menu() {
	$items = array();

	$items['form-custom'] = array(
		'title' => 'Custom Form',
		'page callback' => 'drupal_get_form',
		'page arguments' => array('form_custom_form'),
		'access callback' => true,
	);

	$items['admin/config/people/form-custom'] = array(
		'title' => 'Custom Form Submissions',
		'description' => 'View the entries submitted on the custom form.',
		'page callback' => 'form_custom_admin',
		'access callback' => 'user_access',
		'access arguments' => array('administer users'),
		'type' => MENU_NORMAL_ITEM,
	);

	return $items;
}

/**
 * Implementation of hook_form
 */
function form_custom_form($form, &$form_state) {
	$form['firstname'] = array(
		'#type' => 'textfield',
		'#title' => 'First Name',
		'#size' => 15,
		'#maxlength' => 20,
	);

	$form['lastname'] = array(
		'#type' => 'textfield',
		'#title' => 'Last Name',
		'#size' => 15,
		'#maxlength' => 20,
	);

	$form['gender'] = array(
		'#type' => 'select',
		'#title' => t('Gender'),
		'#options' => array(t('Unspecified'), t('Male'), t('Female')),
	);

	$form['email'] = array(
		'#type' => 'textfield',
		'#title' => 'Email Address',
		'#size' => 20,
		'#maxlength' => 25,
	);

	$form['age'] = array(
		'#type' => 'textfield',
		'#title' => 'Age',
		'#size' => 2,
		'#maxlength' => 3,
	);

	$form['submit'] = array(
		'#type' => 'submit',
		'#value' => t('Submit'),
	);

	return $form;
}

/**
 * Implementation of hook_form_submit
 */
function form_custom_form_submit($form, &$form_state) {
	$values = $form_state['values'];

	// We can just put $values directly into fields() as long as we remove the form-related key/value pairs
	unset_each(array('submit', 'form_build_id', 'form_token', 'form_id', 'op'), $values);

	db_insert('form_custom_submissions')
		->fields($values)
		->execute();

	drupal_set_message(t('Your information has been submitted, thanks!'), 'status');
}

/**
 * Implementation of hook_form_validate
 */
function form_custom_form_validate($form, &$form_state) {
	$values = $form_state['values'];

	if (empty($values['firstname'])) {
		form_set_error('firstname', t('Please provide a first name.'));
	}

	if (empty($values['lastname'])) {
			form_set_error('lastname', t('Everyone\'s got a last name... what\'s yours?'));
	}

	if (empty($values['age'])) {
			form_set_error('age', t('You must provide an age.'));
	} elseif ($values['age'] > 120) {
		form_set_error('age', t('You\'re not ' . $values['age'] . ' years old, I guarantee it.'));
	} elseif ($values['age'] < 5) {
		form_set_error('age', t('Don\'t get me wrong; I respect a toddler or infant that can use a computer, but seriously, you\'re not old enough to be filling out random forms online.'));
	} elseif ($values['age'] < 13) {
		form_set_error('age', t('Like most websites, you\'re not allowed to do stuff until you\'re at least 13 years old. Sorry!'));
	}

	if (empty($values['email'])) {
			form_set_error('email', t('You forgot to give your email address.'));
	} elseif (!valid_email_address($values['email'])) {
		form_set_error('email', t('Are you sure that\'s an email address? It sure doesn\'t look like one to me!'));
	}
}

function form_custom_admin() {
	$header = array('ID', 'First name', 'Last name', 'Gender', 'Age', 'Email');
	$rows = array();

	$result = db_query('SELECT * FROM form_custom_submissions ORDER BY id');
	foreach ($result as $record) {
		$rows[] = (array) $record;
	}

	return theme('table', array('header' => $header, 'rows' => $rows));
}


// Helper function
function unset_each(array $keys, array &$array) {
	foreach ($keys as $key) {
		unset($array[$key]);
	}
}
